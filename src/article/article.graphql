type Query {
  articleQuery: ArticleQuery!
}

type ArticleQuery {
  articles(
    pagination: PaginationInput
    searchOption: SearchOptionInput
  ): [ArticleType]!
  filteredArticles(filterOptions: FilterArticleInput!): [ArticleType]!
  articleDetail(id: ID!): ArticleType
  tags(
    pagination: PaginationInput
    searchOption: SearchOptionInput
  ): [ArticleTagType]!
}

type Mutation {
  articleMutation: ArticleMutation!
}

type ArticleMutation {
  setArticle(id: ID, data: ArticleInputType!): ArticleType!
  deleteArticle(id: ID!): Boolean!
  reviewArticle(id: ID!, data: ArticleReviewInput): ArticleType!
}

input ArticleReviewInput {
  comment: String
  status: ArticleStatus
}

input FilterArticleInput {
  byTag: [String]
  byDate: CompareInputDate
  byStatus: CompareInputString
}

input ArticleInputType {
  title: String!
  shortDescription: String!
  content: String!
  tags: [String!]!
}

enum ArticleStatus {
  pending
  accept
  reject
}

type ArticleType implements BaseGraphQL {
  id: ID!
  title: String!
  createdAt: ScalarDate!
  updatedAt: ScalarDate!
  shortDescription: String
  content: String
  votes: Int!
  status: ArticleStatus!
  createdBy: ClientUserType!
  views: Int!
  shares: Int!
  tags: [ArticleTagType]
  reviewComment: String
  # comments: UserComment[]
}

type ArticleTagType implements BaseGraphQL {
  id: ID!
  title: String!
  createdAt: ScalarDate!
  updatedAt: ScalarDate!
  articles: [ArticleType]
}
