type Query {
  courseQuery: CourseQuery
}

type CourseQuery {
  courses(
    pagination: PaginationInput
    searchOption: SearchOptionInput
  ): [CourseType]!

  course(id: ID!): CourseType!
  totalCourses: Int!
}

type Mutation {
  courseMutation: CourseMutation!
}

type CourseMutation {
  setCourse(id: ID, data: CourseSetInput!): CourseType!
  deleteCourse(id: ID!): Boolean!
}

input CourseSetInput {
  title: String!
  description: String!
  benefits: [String!]!
  requirements: [String!]!
  image: Upload
  tags: [String!]!
  levels: [String]!
}

type CourseType implements BaseGraphQL {
  id: ID!
  title: String!
  createdAt: ScalarDate!
  updatedAt: ScalarDate!
  description: String!
  benefits: [String!]!
  requirements: [String!]!
  imageUrl: String
  tags: [TagType!]!
  lessons(pagination: PaginationInput): [LessonType]!
  createdBy: AdminUser
  levels: [String]!
  joinedUsers(pagination: PaginationInput): [ClientUserType]!
  completedUser(pagination: PaginationInput): [ClientUserType]!
  comments(pagination: PaginationInput): [UserCommentType]!
}
