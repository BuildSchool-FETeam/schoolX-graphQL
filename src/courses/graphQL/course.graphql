type Query {
  courseQuery: CourseQuery
}

type CourseQuery {
  courses: [CourseType!]!
  course(id: ID!): CourseType!
}

type Mutation {
  courseMutation: CourseMutation!
}

type CourseMutation {
  setCourse(id: ID, data: CourseSetInput!): CourseType!
  deleteCourse(id: ID!): Boolean!
}

input CourseSetInput {
  title: String!
  description: String!
  instructorId: ID!
  benefits: [String!]!
  requirements: [String!]!
  image: FileUpload
  tags: [String!]!
  levels: [String]!
}

type CourseType implements BaseGraphQL {
  id: ID!
  title: String!
  createdAt: String!
  updatedAt: String!
  description: String!
  instructor: InstructorType!
  benefits: [String!]!
  requirements: [String!]!
  imageUrl: String
  tags: [TagType!]!
  lessons: [LessonType]!
  createdBy: AdminUser
  levels: [String]!
  # comments: [UserCommentType]!
}
