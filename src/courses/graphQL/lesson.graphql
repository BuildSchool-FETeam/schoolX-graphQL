type LessonType implements BaseGraphQL {
  id: ID!
  title: String!
  createdAt: ScalarDate!
  updatedAt: ScalarDate!
  videoUrl: String!
  votes: Int!
  course: CourseType!
  content: String!
  documents: [DocumentType]!
  assignment: AssignmentType
  comments(pagination: PaginationInput): [UserCommentType]!
}

input LessonSetInput {
  title: String!
  videoUrl: String!
  courseId: ID!
  content: String!
  documents: [Upload]
}

type LessonMutation {
  setLesson(id: ID, data: LessonSetInput!): LessonType!
  deleteLesson(id: ID): Boolean!

  setCodeChallenge(id: ID, data: CodeChallengeSetInput!): CodeChallengeType!
  deleteCodeChallenge(id: ID!): Boolean!
  runCode(code: String!, language: ProgrammingLanguage!): CodeRunResultType!
  runTestCase(
    challengeId: ID!
    data: CodeConfigInput!
  ): SummaryEvaluationResult!

  setQuiz(id: ID, data: QuizSetInput!): QuizType!
  deleteQuiz(id: ID!): Boolean!

  setFileAssignment(id: ID, data: FileAssignmentSetInput!): FileAssignmentType!
  deleteFileAssignment(id: ID!): Boolean!
  submitAssignment(fileAssignmentId: ID!, data: SubmitInput!): GroupAssignmentType!
  evaluationAssignment(groupAssignmentId: ID!, data: EvaluationInput!): GroupAssignmentType!
  viewSubmittedAssignment(groupAssignmentId: ID!, order: Int!): Boolean!
}

type Mutation {
  lessonMutation: LessonMutation!
}

type Query {
  lessonQuery: LessonQuery
}

type LessonQuery {
  lesson(id: ID!): LessonType!
  lessonsWithCourseId(
    courseId: ID!
    pagination: PaginationInput
    searchOption: SearchOptionInput
  ): [LessonType]!

  totalLessons(courseId: ID!): Int!
  getTypeOfAssignment(lessonId: ID!, assignmentId: ID!): TypeAssign!
  codeChallenge(id: ID!): CodeChallengeType!
  quiz(id: ID!): QuizType!
  fileAssignment(id: ID!): FileAssignmentType!
}
